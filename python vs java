Python:

Prós:
Linguagem de alto nível, interpretada, dinamicamente tipada e com uma sintaxe simples e elegante.
Grande comunidade e muitas bibliotecas e frameworks para facilitar o desenvolvimento de aplicações web, como Django, Flask, FastAPI, etc.
Muito usada para ciência de dados, inteligência artificial e machine learning, o que pode ser útil para alguns casos de uso de microserviços.
Boa integração com AWS Lambda, que você já está usando para fazer o streaming dos dados para o Elasticsearch.
Reduz o custo de manutenção do programa, pois é uma linguagem simples, intuitiva e com uma biblioteca padrão muito completa.
Gratuita e de código aberto, o que significa que você não precisa pagar por licenças ou ferramentas para usá-la.
Fácil de aprender e usar por iniciantes, o que pode facilitar o recrutamento e o treinamento de novos desenvolvedores.
Contras:
Velocidade de execução menor do que a de Java, pois Python é interpretada e não compilada. Isso pode afetar o desempenho e a escalabilidade dos seus microserviços, especialmente se eles precisam lidar com um alto volume de tráfego e requisições.
Falta de tipagem estática, que pode dificultar a detecção de erros em tempo de desenvolvimento e aumentar a complexidade do código conforme o projeto cresce.
Não permite criar binários estáticos, que são preferíveis para reduzir o tamanho da imagem e evitar atualizações constantes.
Java:

Prós:
Linguagem de baixo nível, compilada, estaticamente tipada e com uma sintaxe mais verbosa e complexa.
Longa história e enorme comunidade e ecossistema de ferramentas e frameworks para desenvolvimento web, como Spring Boot, Micronaut, Quarkus, etc.
Conhecida pela sua alta performance, confiabilidade e portabilidade, pois ela roda em uma máquina virtual (JVM) que abstrai as diferenças entre os sistemas operacionais.
Suporte para concorrência e paralelismo, que são importantes para aproveitar os recursos dos múltiplos núcleos e máquinas.
Permite criar binários estáticos com o GraalVM, que é um compilador que gera executáveis nativos a partir do código Java. Isso pode reduzir o tamanho da imagem e evitar atualizações constantes.
Contras:
Curva de aprendizado maior do que a de Python, pois Java exige mais conhecimento sobre conceitos avançados como orientação a objetos, generics, lambdas, streams, etc.
Consumo de memória maior do que o de Python, pois Java usa uma máquina virtual (JVM) que aloca memória para cada objeto criado. Isso pode afetar o custo e a eficiência dos seus microserviços, especialmente se eles precisam rodar em ambientes com recursos limitados.
Menor integração com AWS Lambda, que você já está usando para fazer o streaming dos dados para o Elasticsearch.
